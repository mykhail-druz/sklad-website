import { supabase } from '@/lib/supabaseClient'

export async function getProductsBySubcategory(subcategorySlug: string) {
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ slug
    const { data: subcategory, error: subcategoryError } = await supabase
        .from('categories')
        .select('id, name, parent_id')
        .eq('slug', subcategorySlug)
        .single()

    if (subcategoryError || !subcategory) return { name: '', products: [] }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    let { data: products } = await supabase
        .from('products')
        .select('*')
        .eq('subcategory_id', subcategory.id)

    // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if (!products?.length && subcategory.parent_id) {
        console.log(
            `üîÑ –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π...`
        )
        const { data: parentProducts } = await supabase
            .from('products')
            .select('*')
            .eq('category_id', subcategory.parent_id)

        products = parentProducts ?? []
    }

    return { name: subcategory.name, products: products ?? [] }
}
